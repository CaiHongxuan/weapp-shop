<style lang="less">
    page {
        overflow-y: hidden;
    }
    .search_read_only .search_content {
        width: 100%;
    }
    .category {
        display: flex;
        position: relative;
        .left_category {
            width: 200rpx;
            position: relative;
            z-index: 1;
            .name {
                text-align: center;
                height: 100rpx;
                line-height: 100rpx;
                font-size: 28rpx;
                color: #666;
                overflow: hidden;
                white-space: nowrap;
                text-overflow: ellipsis;
            }
            .active {
                border-left: 6rpx solid #ff6a3c;
                background: #fff;
                color: #ff6a3c;
            }
        }
        .category_detail {
            position: relative;
            z-index: 999;
            background: #fff;
            padding: 15px 10px 10px 20px;
            .children {
                .child_second_name {
                    font-weight: bold;
                    margin: 15rpx 0rpx;
                    white-space: nowrap;
                    overflow: hidden;
                    text-overflow: ellipsis;
                }
                .third_children {
                    display: flex;
                    flex-wrap: wrap;
                    .children_item {
                        height: 200rpx;
                        width: 170rpx;
                        text-align: center;
                        .child_image {
                            width: 120rpx;
                            height: 120rpx;
                        }
                        .child_name {
                            font-size: 26rpx;
                            color: #666;
                            white-space: nowrap;
                            overflow: hidden;
                            text-overflow: ellipsis;
                            width: 170rpx;
                        }
                    }
                }
            }
        }
    }
</style>

<template>
    <view class="top_search">
        <view class="search_read_only">
            <navigator class="search_content" url="/pages/search">
                <i class="iconfont icon-search"></i>
                <view class="search_input">搜索商品</view>
            </navigator>
        </view>
    </view>
    <view class="category" style="height: {{ windowHeight-120}}px">
        <scroll-view class="left_category" scroll-y="true" scroll-with-animation="true" style="height: {{windowHeight-105}}px">
            <view class="name {{item.active ? 'active' : ''}}" wx:for="{{rootCateList}}" wx:key="item" @tap="changeCate" data-code="{{item.code}}">
                {{item.name}}
            </view>
        </scroll-view>
        <scroll-view class="category_detail" scroll-y="true" scroll-with-animation="true" style="height: {{windowHeight-120}}px">
            <view class="children" wx:for="{{childCateList}}" wx:for-item="item" wx:key="index">
                <view class="child_second_name" data-code="{{item.code}}">{{item.name}}</view>
                <view class="third_children">
                    <navigator hover-class="none" class="children_item" wx:for="{{item.thirdCategory}}" wx:for-item="thirdCategory" wx:key="thirdIndex" url="/pages/index">
                        <image class="child_image" src="{{thirdCategory.thumLogo}}"></image>
                        <view class="child_name" data-code="{{thirdCategory.code}}">{{thirdCategory.name}}</view>
                    </navigator>
                </view>
            </view>
        </scroll-view>
    </view>
</template>

<script>
    import wepy from '@wepy/core'
    import api from '@/api/api'

    wepy.page({
        data: {
            windowHeight: 0,
            rootCateList: {},
            childCateList: {}
        },
        methods: {
            async getChildCate(rootCateCode) {
                // 根据一级分类获取二级、三级分类
                const json = await api.childrenCategoryList({query: {}})
                if (json.list instanceof Array) {
                    this.childCateList = json.list
                }
            },
            async getRootCateTopLevel() {
                // 初始化一级分类
                const json = await api.rootCategoryList({query: {}})
                if (json.list instanceof Array) {
                    this.rootCateList = json.list
                    if (this.rootCateList.length > 0) {
                        let curRootCateCode = wx.getStorageSync('curRootCateCode')
                        let activeCateCode = this.rootCateList[0].code
                        if (curRootCateCode.length == 0) {
                            this.rootCateList[0].active = true
                        } else {
                            for (var i = 0; i < this.rootCateList.length; i++) {
                                var rootCate = this.rootCateList[i]
                                rootCate.active = false
                                if (curRootCateCode == rootCate.code) {
                                    activeCateCode = rootCate.code
                                    rootCate.active = true
                                }
                            }
                        }
                        this.getChildCate(activeCateCode)
                    }
                }
            },
            changeCate(e) {
                let code = e.currentTarget.dataset.code
                this.getChildCate(code)
                wx.setStorageSync('curRootCateCode', code)
                for (var i = 0; i < this.rootCateList.length; i++) {
                    var rootCate = this.rootCateList[i]
                    rootCate.active = false
                    if (rootCate.code == code) {
                        rootCate.active = true
                    }
                }
            }
        },
        onShow() {
            this.getRootCateTopLevel()
        },
        onLoad() {
            let systemInfo = wx.getStorageSync('systemInfo')
            this.windowHeight = systemInfo.windowHeight
        }
    })
</script>
<config>
    {
        navigationBarTitleText: '分类'
    }
</config>