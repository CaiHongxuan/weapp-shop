<style lang="less">
    .history {
        padding: 20px 27px;
    }

    .doc {
        color: #999;
        font-size: 26 rpx;
    }

    .his-item {
        margin-top: 20 rpx;
        display: flex;
        align-items: center;
        margin-left: -20 rpx;

        .child {
            background: #dedede;
            padding: 10 rpx 20 rpx;
            border-radius: 300 rpx;
            margin-left: 20 rpx;
            font-size: 26 rpx;
            margin-top: 5 rpx;
            color: #000;
        }

    }

    .btn-box {
        width: 377 rpx;
        margin: 0 auto;
        padding-top: 88 rpx;

        .button {
            color: #999;
        }

    }

    .active {
        border: 1px solid #f23737;
        color: #f23737;
    }
</style>

<template>
    <view class="container">
        <search @searchValue.user="doSearch"></search>
        <filterBar wx:if="{{list.length > 0 || skuval !== ''}}" @currentType.user="currentType"></filterBar>
        <view wx:if="{{list.length>0}}">

        </view>
        <view wx:else class="history {{show?'':'hidden'}}">
            <view class="doc">历史记录</view>
            <view class="his-item">
                <view wx:for="{{hisKeywordList}}" wx:key="item" @tap.stop="selHisKeyword" data-id="{{item.id}}">
                    <view class="child {{item.sel == '1' ? 'active' : ''}}">{{item.keyword}}</view>
                </view>
            </view>
            <view class="btn-box">
                <view class="button type-empty" @tap.stop="clearHis">清除历史记录</view>
            </view>
        </view>
    </view>
</template>

<script>
  import wepy from '@wepy/core'

  wepy.page({
    data: {
      list: [],
      showLoading: false,
      isEmpty: false,
      isFilter: false,
      currentPage: 1,
      pageTotal: 0,
      keyword: '',
      hisKeywordList: [],
      cateCode: '',
      show: true,
      sort: -1,
      title: '',
      skuval: ''
    },
    onLoad(option) {
      this.list = []
      this.skuval = ''
      this.cateCode = option.cateCode
      if (this.cateCode !== undefined && this.cateCode.length > 0) {
        // this.$invoke('search', 'show', '0')
        this.show = false
        this.doSearchGoods(this.cateCode)
        this.title = '' + option.title
        this.setTitle('' + option.title)
        console.log('onLoad - cateCode')
      } else {
        // this.$invoke('search', 'show', '1')
        this.show = true
        this.getHisKeywordList()
        console.log('onLoad - not cateCode')
      }
    },
    computed: {},
    methods: {
      async doSearchGoods(keyword) {
        // todo get goods
        const json = []
        this.list = json
        console.log('doSearchGoods', keyword)
      },
      async getHisKeywordList() {
        let userSpecialInfo = wx.getStorageSync('userSpecialInfo') || {}
        let openId = userSpecialInfo.openid
        // todo get history keyword list by openid
        const json = []
        this.hisKeywordList = json
        console.log('getHisKeywordList')
      },
      async clearUserKeywords() {
        let userSpecialInfo = wx.getStorageSync('userSpecialInfo') || {}
        let openId = userSpecialInfo.openid
        // todo clear history keyword list
        const json = ''
        console.log('clearUserKeywords')
      },
      setTitle(title) {
        wx.setNavigationBarTitle({
          title: title
        })
        console.log('setTitle')
      },
      doSearch(val) {
        this.list = []
        this.isEmpty = false
        this.showLoading = true
        this.keyword = val
        this.doSearchGoods(val)
        console.log('doSearch')
      },
      currentType(obj) {
        let name = obj.name
        let type = obj.type
        if (name === 'zhonghe') {
          this.sort = -1
        } else if (name === 'sale') {
          this.sort = 3
        } else if (name === 'price') {
          if (type === 'desc') {
            this.sort = 2
          } else if (type === 'asc') {
            this.sort = 1
          }
        } else if (name === 'sku') {
          this.skuval = type
        }
        this.list = []
        this.isEmpty = false
        this.showLoading = true
        this.show = false
        this.doSearchGoods(this.keyword)
        console.log('currentType')
      },
      selHisKeyword(e) {
        let id = e.currentTarget.dataset.id
        let hisKeyword = ''
        for (let i = 0; i < this.hisKeywordList.length; i++) {
          this.hisKeywordList[i].sel = 0
          if (id === this.hisKeywordList[i].id) {
            hisKeyword = this.hisKeywordList[i].keyword
            this.hisKeywordList[i].sel = 1
          }
        }
        if (hisKeyword.length > 0) {
          this.keyword = hisKeyword
          this.doSearchGoods(hisKeyword)
        }
        console.log('selHisKeyword')
      },
      clearHis() {
        this.clearUserKeywords()
        console.log('clearHis')
      }
    }
  })
</script>
<config>
    {
        navigationBarTitleText: '搜索',
        usingComponents: {
            search: '~@/components/search',
            filterBar: '~@/components/filter-bar'
        }
    }
</config>
